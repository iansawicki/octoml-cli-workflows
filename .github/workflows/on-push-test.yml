name: on-push-test
run-name: Test on push to test.

env:
  OCTO_CLI_STABLE_DOWNLOAD_URL: https://downloads.octoml.ai/octoml_ubuntu_v0.7.3.tar.gz
  REGISTRY: ghcr.io
  IMAGE_NAME: octoml/octo-cli-actions-deploy/yolov5s-skylake-accelerated
  OCTOML_AGREE_TO_TERMS: 1
  OCTOML_TELEMETRY: false


on: [push]
jobs:
  accelerated-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
          submodules: recursive

      - name: Pull LFS
        run: git lfs pull

      - name: Download octoml CLI
        timeout-minutes: 1
        run: |
          curl ${{ env.OCTO_CLI_STABLE_DOWNLOAD_URL }} --output ./octoml.tar.gz
          tar -xf ./octoml.tar.gz
          chmod u+x ./octoml
          ./octoml clean
      
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Push accelerated package to 
        env:
          OCTOML_AGREE_TO_TERMS: 1
          OCTOML_TELEMETRY: false
          OCTOML_ACCESS_TOKEN: ${{ secrets.OCTOML_ACCESS_TOKEN }}
        run: |
          ./octoml package -a --stream | ./octoml build --stream > build_output
          export IMAGE_SHA=$(jq -r '.per_platform_data[].build_metadata.deployable_id.ID' build_output)
          export IMAGE_TAG="${GITHUB_REF_NAME}-${GITHUB_SHA}-$(date +%s)"
          docker tag $IMAGE_SHA ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG
          docker tag $IMAGE_SHA ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  # cloud-example:
  #   uses: ./.github/workflows/cloud-example.yml