name: on-push-test
run-name: Test on push to test.

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: octoml/octo-cli-actions-deploy/yolov5s-skylake-accelerated

on: [push]
jobs:
  accelerated-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
          submodules: recursive

      - name: Pull LFS
        run: git lfs pull
      
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Deploy
        env:
          OCTOML_AGREE_TO_TERMS: 1
          OCTOML_TELEMETRY: false
          OCTOML_ACCESS_TOKEN: ${{ secrets.OCTOML_ACCESS_TOKEN }}
        run: |
          chmod u+x ./octoml
          ./octoml package -a | ./octoml build > build_output
          RUN_ID=$(awk  -F': ' '{print $2}' build_output)
          export RUN_DATA_PATH="$HOME/.octoml/db/$RUN_ID.json"
          export IMAGE_SHA=$(jq -r '.per_platform_data[].build_metadata.deployable_id.ID' $RUN_DATA_PATH)
          export IMAGE_TAG="${GITHUB_REF_NAME}-${GITHUB_SHA}-$(date +%s)"
          docker tag $IMAGE_SHA ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG
          docker tag $IMAGE_SHA ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  # cloud-example:
  #   uses: ./.github/workflows/cloud-example.yml